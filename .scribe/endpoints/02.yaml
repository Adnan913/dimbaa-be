name: 'Role Management'
description: |-


  API endpoints for managing roles
endpoints:
  -
    httpMethods:
      - GET
    uri: api/admin/roles
    metadata:
      groupName: 'Role Management'
      groupDescription: |-


        API endpoints for managing roles
      subgroup: ''
      subgroupDescription: ''
      title: 'List all the roles.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_BEARER_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'X-Requested-With, Content-Type, X-Token-Auth, Authorization'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ha6kfVvEDgc1Z83b465adPe'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/roles
    metadata:
      groupName: 'Role Management'
      groupDescription: |-


        API endpoints for managing roles
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new role.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_BEARER_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: rerum
        type: string
        custom: []
      permission:
        name: permission
        description: ''
        required: true
        example: impedit
        type: string
        custom: []
    cleanBodyParameters:
      name: rerum
      permission: impedit
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6c5vEV63b1ZDaek8fha4Pdg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/roles/{id}'
    metadata:
      groupName: 'Role Management'
      groupDescription: |-


        API endpoints for managing roles
      subgroup: ''
      subgroupDescription: ''
      title: 'Display single role with permissions.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_BEARER_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 6
        type: integer
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
          access-control-allow-methods: 'GET, POST, PUT, DELETE, OPTIONS'
          access-control-allow-headers: 'X-Requested-With, Content-Type, X-Token-Auth, Authorization'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Dfg6vdV1aecb6P48hZEa5k3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/admin/roles/{id}'
    metadata:
      groupName: 'Role Management'
      groupDescription: |-


        API endpoints for managing roles
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Role and permissions.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_BEARER_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 3
        type: integer
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: porro
        type: string
        custom: []
      permission:
        name: permission
        description: ''
        required: true
        example: sint
        type: string
        custom: []
    cleanBodyParameters:
      name: porro
      permission: sint
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PgZVDaE3cv18fae5k6h4bd6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/roles/{id}'
    metadata:
      groupName: 'Role Management'
      groupDescription: |-


        API endpoints for managing roles
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete the Role.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_BEARER_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 13
        type: integer
        custom: []
    cleanUrlParameters:
      id: 13
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6fv4ZE56ga3dhVckeD8ba1P'
    controller: null
    method: null
    route: null
    custom: []
